# Class 1 Grid Instances of [Machuca 2012]
# SequentialParetoSearch_BTreeParetoQueue_VectorLabelSet_(radixsort, prefetching)

# Subcomponent Timings:
#   0.019285 Find Pareto Min
#   0.0321232 Group Candidates
#   0.0316845 Update Labelsets 
#   0.0103331 Sort Updates
#   0.0295018 Update PQ 
# Sequential BTree: 
#  inner slots size [4, 64]
#  leaf slots size [165, 660]
1 100 100 0.118282 45.8 0.8 7.71094 8 0 1000 128 # time in [s], target node label count, q, memory [mb], peak memory [mb], p, max_costs, buffer_batch_size

# Subcomponent Timings:
#   0.0515929 Find Pareto Min
#   0.0671433 Group Candidates
#   0.0831898 Update Labelsets 
#   0.02605 Sort Updates
#   0.0779491 Update PQ 
# Sequential BTree: 
#  inner slots size [4, 64]
#  leaf slots size [165, 660]
2 125 125 0.274547 58.7 0.8 11.4605 12 0 1000 128 # time in [s], target node label count, q, memory [mb], peak memory [mb], p, max_costs, buffer_batch_size

# Subcomponent Timings:
#   0.0687986 Find Pareto Min
#   0.0804847 Group Candidates
#   0.0978795 Update Labelsets 
#   0.0297372 Sort Updates
#   0.10311 Update PQ 
# Sequential BTree: 
#  inner slots size [4, 64]
#  leaf slots size [165, 660]
3 150 150 0.532416 62.6 0.8 16.527 17 0 1000 128 # time in [s], target node label count, q, memory [mb], peak memory [mb], p, max_costs, buffer_batch_size

# Subcomponent Timings:
#   0.27959 Find Pareto Min
#   0.237265 Group Candidates
#   0.375001 Update Labelsets 
#   0.113694 Sort Updates
#   0.43199 Update PQ 
# Sequential BTree: 
#  inner slots size [4, 64]
#  leaf slots size [165, 660]
4 175 175 1.11624 116 0.8 24.9031 29 0 1000 128 # time in [s], target node label count, q, memory [mb], peak memory [mb], p, max_costs, buffer_batch_size

# Subcomponent Timings:
#   0.409676 Find Pareto Min
#   0.312958 Group Candidates
#   0.545634 Update Labelsets 
#   0.16416 Sort Updates
#   0.627796 Update PQ 
# Sequential BTree: 
#  inner slots size [4, 64]
#  leaf slots size [165, 660]
5 200 200 1.77116 123.5 0.8 34.2672 39 0 1000 128 # time in [s], target node label count, q, memory [mb], peak memory [mb], p, max_costs, buffer_batch_size

# Subcomponent Timings:
#   0.766995 Find Pareto Min
#   0.496947 Group Candidates
#   0.90523 Update Labelsets 
#   0.275979 Sort Updates
#   1.18432 Update PQ 
# Sequential BTree: 
#  inner slots size [4, 64]
#  leaf slots size [165, 660]
6 225 225 3.34955 191.9 0.8 52.7723 62 0 1000 128 # time in [s], target node label count, q, memory [mb], peak memory [mb], p, max_costs, buffer_batch_size

# Subcomponent Timings:
#   1.04983 Find Pareto Min
#   0.648608 Group Candidates
#   1.24199 Update Labelsets 
#   0.367045 Sort Updates
#   1.60322 Update PQ 
# Sequential BTree: 
#  inner slots size [4, 64]
#  leaf slots size [165, 660]
7 250 250 4.8943 193.6 0.8 69.7277 100 0 1000 128 # time in [s], target node label count, q, memory [mb], peak memory [mb], p, max_costs, buffer_batch_size

# Subcomponent Timings:
#   1.66049 Find Pareto Min
#   0.941869 Group Candidates
#   1.90809 Update Labelsets 
#   0.555168 Sort Updates
#   2.56766 Update PQ 
# Sequential BTree: 
#  inner slots size [4, 64]
#  leaf slots size [165, 660]
8 275 275 6.95828 271.6 0.8 92.5703 103 0 1000 128 # time in [s], target node label count, q, memory [mb], peak memory [mb], p, max_costs, buffer_batch_size

# Subcomponent Timings:
#   2.05915 Find Pareto Min
#   1.17415 Group Candidates
#   2.33973 Update Labelsets 
#   0.66813 Sort Updates
#   3.17514 Update PQ 
# Sequential BTree: 
#  inner slots size [4, 64]
#  leaf slots size [165, 660]
9 300 300 10.1455 284.4 0.8 121.807 143 0 1000 128 # time in [s], target node label count, q, memory [mb], peak memory [mb], p, max_costs, buffer_batch_size

# Subcomponent Timings:
#   2.92696 Find Pareto Min
#   1.40912 Group Candidates
#   2.83609 Update Labelsets 
#   0.786231 Sort Updates
#   4.5958 Update PQ 
# Sequential BTree: 
#  inner slots size [4, 64]
#  leaf slots size [165, 660]
10 325 325 13.7687 282.4 0.8 155.05 186 0 1000 128 # time in [s], target node label count, q, memory [mb], peak memory [mb], p, max_costs, buffer_batch_size

# Subcomponent Timings:
#   4.43742 Find Pareto Min
#   1.9824 Group Candidates
#   4.16957 Update Labelsets 
#   1.20119 Sort Updates
#   7.03927 Update PQ 
# Sequential BTree: 
#  inner slots size [4, 64]
#  leaf slots size [165, 660]
11 350 350 21.6717 370.1 0.8 219.439 324 0 1000 128 # time in [s], target node label count, q, memory [mb], peak memory [mb], p, max_costs, buffer_batch_size

# Subcomponent Timings:
#   6.98843 Find Pareto Min
#   3.09313 Group Candidates
#   6.48643 Update Labelsets 
#   1.85831 Sort Updates
#   11.0912 Update PQ 
# Sequential BTree: 
#  inner slots size [4, 64]
#  leaf slots size [165, 660]
12 375 375 27.2585 377 0.8 269.105 324 0 1000 128 # time in [s], target node label count, q, memory [mb], peak memory [mb], p, max_costs, buffer_batch_size

# Subcomponent Timings:
#   8.78274 Find Pareto Min
#   3.6403 Group Candidates
#   7.92414 Update Labelsets 
#   2.23841 Sort Updates
#   14.0535 Update PQ 
# Sequential BTree: 
#  inner slots size [4, 64]
#  leaf slots size [165, 660]
13 400 400 37.9599 485.3 0.8 351.639 442 0 1000 128 # time in [s], target node label count, q, memory [mb], peak memory [mb], p, max_costs, buffer_batch_size
